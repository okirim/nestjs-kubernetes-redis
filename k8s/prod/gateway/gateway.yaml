apiVersion: apps/v1
kind: Deployment
metadata:
  name:  gateway-dep
  #namespace: default
  # labels:
  #   app:  gateway-dep
spec:
  selector:
    matchLabels:
      app: gateway-pod
  # strategy:
  #   rollingUpdate:
  #     maxSurge: 25%
  #     maxUnavailable: 25%
  #   type: RollingUpdate
  template:
    metadata:
      labels:
        app:  gateway-pod
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  gateway-container
        image:  okirim/gateway-dev:latest
        command: ["npm","run","start:debug"]
        # resources:
        #   requests:
        #     cpu: 100m
        #     memory: 100Mi
        #   limits:
        #     cpu: 100m
        #     memory: 100Mi
        # livenessProbe:
        #   tcpSocket:
        #     port: 3000
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 5
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /_status/healthz
        #     port: 3000
        #   initialDelaySeconds: 5
        #   timeoutSeconds: 2
        #   successThreshold: 1
        #   failureThreshold: 3
        #   periodSeconds: 10
        # env:
        # - name: DB_HOST
        #   valueFrom:
        #     configMapKeyRef:
        #       name: gateway-dep
        #       key: DB_HOST
        ports:
        - containerPort:  3000
          name:  gateway
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  #namespace: ingress-nginx
spec:
  type: NodePort
  selector:
    app: gateway-pod
  ports:
  - name: gateway
    port: 3000
    protocol: TCP
    targetPort: 3000
---
#   kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.1/deploy/static/provider/cloud/deploy.yaml
#   kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
#   kubectl get services -n ingress-nginx